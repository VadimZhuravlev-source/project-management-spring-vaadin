buildscript {
	repositories {
		mavenCentral()
		maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
		maven { setUrl("https://repo.spring.io/milestone") }
	}
}
plugins {
	id 'org.springframework.boot' version '3.1.5'//2.7.2-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'//1.0.15.RELEASE
	id 'com.vaadin' version "24.2.5"
	id "org.flywaydb.flyway" version "10.2.0"
	id 'java'
}

group = 'com.PMVaadin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
	maven { setUrl("https://repo.spring.io/milestone") }
	maven { setUrl("https://maven.vaadin.com/vaadin-addons") }
}

ext {
	set('vaadinVersion', "24.2.5")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.flywaydb:flyway-core'
	implementation 'junit:junit:4.13.2'
	implementation 'com.google.guava:guava:31.1-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'com.vaadin:vaadin-spring-boot-starter'
	implementation 'org.vaadin.addons.flowingcode:year-month-calendar:4.1.0'
	implementation 'org.vaadin.addons.tltv.gantt:gantt-flow-addon:24.0.0'
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:$vaadinVersion"
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/PM'
	user = 'postgres'
	password = '123'
	schemas = ['public']
}